Step 1: Generate Passport Encryption Keys
# Enter Laravel container
docker-compose exec laravel bash

# Generate Passport keys
php artisan passport:keys

# Then setup OAuth clients
php artisan passport:setup-mongodb

root@32e307200e42:/var/www/html# php artisan passport:keys --force

   INFO  Encryption keys generated successfully.
   *********************************************************************

# Enter Laravel container
docker-compose exec laravel bash

# Clear all caches
php artisan config:clear
php artisan cache:clear
php artisan route:clear
php artisan view:clear

# Setup Passport
php artisan passport:setup-mongodb

# Seed database
php artisan db:seed --class=RolePermissionSeeder

# Test the routes
php artisan route:list


************************------------------************************

root@32e307200e42:/var/www/html# php artisan db:seed --class=RolePermissionSeeder

   INFO  Seeding database.  

✅ Admin user created successfully!
Admin Login: admin@example.com / admin123
root@32e307200e42:/var/www/html# php artisan route:list

  GET|HEAD        / ....................................................................................  
  GET|HEAD        api/admin/categories ................. categories.index › Api\CategoryController@index
  POST            api/admin/categories ................. categories.store › Api\CategoryController@store  
  GET|HEAD        api/admin/categories/{category} ........ categories.show › Api\CategoryController@show  
  PUT|PATCH       api/admin/categories/{category} .... categories.update › Api\CategoryController@update  
  DELETE          api/admin/categories/{category} .. categories.destroy › Api\CategoryController@destroy
  GET|HEAD        api/admin/customers ................... customers.index › Api\CustomerController@index  
  POST            api/admin/customers ................... customers.store › Api\CustomerController@store  
  GET|HEAD        api/admin/customers/{customer} .......... customers.show › Api\CustomerController@show  
  PUT|PATCH       api/admin/customers/{customer} ...... customers.update › Api\CustomerController@update  
  DELETE          api/admin/customers/{customer} .... customers.destroy › Api\CustomerController@destroy  
  GET|HEAD        api/admin/inventory/low-stock ....................... Api\InventoryController@lowStock  
  GET|HEAD        api/admin/inventory/stock-levels ................. Api\InventoryController@stockLevels  
  PUT             api/admin/inventory/{id} ......................... Api\InventoryController@updateStock  
  POST            api/admin/login ............................................. Api\AuthController@login  
  POST            api/admin/logout ........................................... Api\AuthController@logout  
  GET|HEAD        api/admin/orders ............................ orders.index › Api\OrderController@index  
  POST            api/admin/orders ............................ orders.store › Api\OrderController@store  
  GET|HEAD        api/admin/orders/{order} ...................... orders.show › Api\OrderController@show  
  PUT|PATCH       api/admin/orders/{order} .................. orders.update › Api\OrderController@update  
  DELETE          api/admin/orders/{order} ................ orders.destroy › Api\OrderController@destroy  
  GET|HEAD        api/admin/products ...................... products.index › Api\ProductController@index  
  POST            api/admin/products ...................... products.store › Api\ProductController@store  
  GET|HEAD        api/admin/products/{product} .............. products.show › Api\ProductController@show  
  PUT|PATCH       api/admin/products/{product} .......... products.update › Api\ProductController@update  
  DELETE          api/admin/products/{product} ........ products.destroy › Api\ProductController@destroy  
  GET|HEAD        api/admin/profile ............................................ Api\AuthController@user  
  GET|HEAD        api/categories .......................................... Api\CategoryController@index
  POST            api/customer/login ......................................... Api\OAuthController@login  
  POST            api/customer/logout ....................................... Api\OAuthController@logout  
  GET|HEAD        api/customer/profile ........................................ Api\OAuthController@user  
  PUT             api/customer/profile ............................ Api\CustomerController@updateProfile  
  POST            api/customer/refresh-token .......................... Api\OAuthController@refreshToken  
  POST            api/customer/register ................................... Api\OAuthController@register  
  GET|HEAD        api/products ............................................. Api\ProductController@index  
  GET|HEAD        api/products/{id} ......................................... Api\ProductController@show  
  GET|HEAD        confirm-password .......... password.confirm › Auth\ConfirmablePasswordController@show  
  POST            confirm-password ............................ Auth\ConfirmablePasswordController@store  
  GET|HEAD        dashboard .................................................................. dashboard  
  POST            email/verification-notification verification.send › Auth\EmailVerificationNotificatio…  
  GET|HEAD        forgot-password ........... password.request › Auth\PasswordResetLinkController@create  
  POST            forgot-password .............. password.email › Auth\PasswordResetLinkController@store  
  GET|HEAD        health ...............................................................................  
  GET|HEAD        livewire/livewire.js ..... Livewire\Mechanisms › FrontendAssets@returnJavaScriptAsFile  
  GET|HEAD        livewire/livewire.min.js.map ............... Livewire\Mechanisms › FrontendAssets@maps  
  GET|HEAD        livewire/preview-file/{filename} livewire.preview-file › Livewire\Features › FilePrev…  
  POST            livewire/update .. livewire.update › Livewire\Mechanisms › HandleRequests@handleUpdate  
  POST            livewire/upload-file livewire.upload-file › Livewire\Features › FileUploadController@…  
  GET|HEAD        login ............................. login › Auth\AuthenticatedSessionController@create
  POST            login ...................................... Auth\AuthenticatedSessionController@store  
  POST            logout .......................... logout › Auth\AuthenticatedSessionController@destroy  
  GET|HEAD        oauth/authorize passport.authorizations.authorize › Laravel\Passport › AuthorizationC…  
  POST            oauth/authorize passport.authorizations.approve › Laravel\Passport › ApproveAuthoriza…  
  DELETE          oauth/authorize passport.authorizations.deny › Laravel\Passport › DenyAuthorizationCo…  
  GET|HEAD        oauth/clients ... passport.clients.index › Laravel\Passport › ClientController@forUser  
  POST            oauth/clients ..... passport.clients.store › Laravel\Passport › ClientController@store  
  PUT             oauth/clients/{client_id} passport.clients.update › Laravel\Passport › ClientControll…  
  DELETE          oauth/clients/{client_id} passport.clients.destroy › Laravel\Passport › ClientControl…  
  GET|HEAD        oauth/personal-access-tokens passport.personal.tokens.index › Laravel\Passport › Pers…  
  POST            oauth/personal-access-tokens passport.personal.tokens.store › Laravel\Passport › Pers…  
  DELETE          oauth/personal-access-tokens/{token_id} passport.personal.tokens.destroy › Laravel\Pa…  
  GET|HEAD        oauth/scopes .......... passport.scopes.index › Laravel\Passport › ScopeController@all  
  POST            oauth/token ..... passport.token › Laravel\Passport › AccessTokenController@issueToken  
  POST            oauth/token/refresh passport.token.refresh › Laravel\Passport › TransientTokenControl…  
  GET|HEAD        oauth/tokens passport.tokens.index › Laravel\Passport › AuthorizedAccessTokenControll…  
  DELETE          oauth/tokens/{token_id} passport.tokens.destroy › Laravel\Passport › AuthorizedAccess…  
  PUT             password ............................ password.update › Auth\PasswordController@update  
  GET|HEAD        profile ........................................ profile.edit › ProfileController@edit  
  PATCH           profile .................................... profile.update › ProfileController@update  
  DELETE          profile .................................. profile.destroy › ProfileController@destroy  
  GET|HEAD        register ............................. register › Auth\RegisteredUserController@create  
  POST            register ......................................... Auth\RegisteredUserController@store  
  POST            reset-password ..................... password.store › Auth\NewPasswordController@store  
  GET|HEAD        reset-password/{token} ............ password.reset › Auth\NewPasswordController@create  
  GET|HEAD        storage/{path} ......................................................... storage.local  
  GET|HEAD        test-full-stack ......................................... TestController@testFullStack  
  GET|HEAD        test-mongo ........................................ TestController@testMongoConnection  
  GET|HEAD        test-products .......................................... TestController@getAllProducts  
  GET|HEAD        test-redis ........................................ TestController@testRedisConnection  
  GET|HEAD        up ...................................................................................  
  GET|HEAD        verify-email ............ verification.notice › Auth\EmailVerificationPromptController  
  GET|HEAD        verify-email/{id}/{hash} ............ verification.verify › Auth\VerifyEmailController  

                                                                                     Showing [82] routes  
Issue 1: Missing Passport Encryption Keys
The error Key path "file:///var/www/html/storage/oauth-private.key" does not exist or is not readable indicates that Passport encryption keys are missing.

Fix: Generate Passport Keys
# Enter Laravel container
docker-compose exec laravel bash

# Generate Passport encryption keys
php artisan passport:keys

# Set proper permissions
chmod 600 storage/oauth-*.key
chown www-data:www-data storage/oauth-*.key



root@32e307200e42:/var/www/html# php artisan route:list | grep api
  GET|HEAD        api/admin/categories ......... categories.index › Api\CategoryController@index
  POST            api/admin/categories ......... categories.store › Api\CategoryController@store  
  GET|HEAD        api/admin/categories/{category} categories.show › Api\CategoryController@show   
  PUT|PATCH       api/admin/categories/{category} categories.update › Api\CategoryController@up…
  DELETE          api/admin/categories/{category} categories.destroy › Api\CategoryController@d…  
  GET|HEAD        api/admin/customers ........... customers.index › Api\CustomerController@index  
  POST            api/admin/customers ........... customers.store › Api\CustomerController@store  
  GET|HEAD        api/admin/customers/{customer} .. customers.show › Api\CustomerController@show  
  PUT|PATCH       api/admin/customers/{customer} customers.update › Api\CustomerController@upda…  
  DELETE          api/admin/customers/{customer} customers.destroy › Api\CustomerController@des…  
  GET|HEAD        api/admin/inventory/low-stock ............... Api\InventoryController@lowStock  
  GET|HEAD        api/admin/inventory/stock-levels ......... Api\InventoryController@stockLevels  
  PUT             api/admin/inventory/{id} ................. Api\InventoryController@updateStock  
  POST            api/admin/login ..................................... Api\AuthController@login  
  POST            api/admin/logout ................................... Api\AuthController@logout  
  GET|HEAD        api/admin/orders .................... orders.index › Api\OrderController@index  
  POST            api/admin/orders .................... orders.store › Api\OrderController@store  
  GET|HEAD        api/admin/orders/{order} .............. orders.show › Api\OrderController@show  
  PUT|PATCH       api/admin/orders/{order} .......... orders.update › Api\OrderController@update  
  DELETE          api/admin/orders/{order} ........ orders.destroy › Api\OrderController@destroy  
  GET|HEAD        api/admin/products .............. products.index › Api\ProductController@index  
  POST            api/admin/products .............. products.store › Api\ProductController@store  
  GET|HEAD        api/admin/products/{product} ...... products.show › Api\ProductController@show  
  PUT|PATCH       api/admin/products/{product} .. products.update › Api\ProductController@update  
  DELETE          api/admin/products/{product} products.destroy › Api\ProductController@destroy   
  GET|HEAD        api/admin/profile .................................... Api\AuthController@user  
  GET|HEAD        api/categories .................................. Api\CategoryController@index  
  POST            api/customer/login ................................. Api\OAuthController@login  
  POST            api/customer/logout ............................... Api\OAuthController@logout  
  GET|HEAD        api/customer/profile ................................ Api\OAuthController@user  
  PUT             api/customer/profile .................... Api\CustomerController@updateProfile
  POST            api/customer/refresh-token .................. Api\OAuthController@refreshToken  
  POST            api/customer/register ........................... Api\OAuthController@register  
  GET|HEAD        api/health ...................................................................  
  GET|HEAD        api/products ..................................... Api\ProductController@index  
  GET|HEAD        api/products/{id} ................................. Api\ProductController@show  
  GET|HEAD        api/test .....................................................................  